dpi = 300
)
# Libraries
library(rio)
library(dplyr)
library(corrplot)
library(GGally)
library(ggplot2)
turnout <- import("/Users/alexander/Documents/MSc Data Science/erp-uom/data/ukTurnoutFULL.csv")
pcon_2024 <- st_read("/Users/alexander/Documents/MSc Data Science/erp-uom/shapefiles/2024/PCON_JULY_2024_UK_BFC.shp") # Open 2024 shp
# From long to wide format
df_wide <- turnout %>%
pivot_wider(
id_cols = c(gss_code, name),
names_from = year,
values_from = turnout_2024_constituency
) %>%
rename_with(
.cols = where(is.numeric),
.fn = ~ paste0("Y", .x)
)
turnout_years <- df_wide %>%
select(starts_with("Y")) %>% select(1,4,3,2,5)
plot_matrix <- ggpairs(
turnout_years,
lower = list(continuous = wrap("points", alpha = 0.3, size = 0.8)),
upper = list(continuous = wrap("cor", size = 3)),
diag = list(continuous = wrap("densityDiag", alpha = 0.5)),
title = "Turnout Scatterplot Matrix with Pearson Correlations"
)
ggsave("turnout_scatterplot_matrix.jpg",
plot = plot_matrix,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
# Cluster
set.seed(42)
wss <- function(k) {
kmeans(turnout_years, centers = k, nstart = 10)$tot.withinss
}
k_values <- 1:10
wss_values <- sapply(k_values, wss)
plot(k_values, wss_values, type = "b", pch = 19,
xlab = "Number of Clusters (k)",
ylab = "Total Within-Cluster Sum of Squares",
main = "Elbow Method for Choosing Optimal k")
k <- 4
kmeans_result <- kmeans(turnout_years, centers = k, nstart = 25)
df_clustered <- df_wide %>% # Add cluster to data
filter(complete.cases(select(., starts_with("Y")))) %>%
mutate(cluster = kmeans_result$cluster)
turnout_matrix <- df_wide %>%
select(starts_with("Y")) %>%
drop_na()
# Run PCA without scaling (since all are 0–1)
pca_result <- prcomp(turnout_matrix, center = TRUE, scale. = FALSE)
pca_df <- as.data.frame(pca_result$x[, 1:2]) %>%
mutate(cluster = factor(kmeans_result$cluster))
clust_turnout <- ggplot(pca_df, aes(x = PC1, y = PC2, colour = cluster)) +
geom_point(alpha = 0.7, size = 2) +
labs(title = "Cluster Visualisation of Turnout Patterns (PCA)",
x = "Principal Component 1", y = "Principal Component 2") +
theme_minimal() +
scale_colour_brewer(palette = "Set1")
ggsave("turnout_clusters_matrix.jpg",
plot = clust_turnout,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
df_clustered$cluster <- ifelse(df_clustered$cluster == 1, "Low",
ifelse(df_clustered$cluster == 2, "Medium - Low",
ifelse(df_clustered$cluster == 3, "High",
ifelse(df_clustered$cluster == 4, "Medium - High",0))))
View(df_clustered)
pcon_2024_merged <- pcon_2024 %>% # Merge with shapefile
left_join(df_clustered, by = c("PCON24CD" = "gss_code"))
#### D: Results
colours <- c(
"High" = "#00BFFF",
"Medium - High" = "#FFD700",
"Medim - Low" = "#FF7F24",
"Low"  = "#B22222"
)
cluster_map <- ggplot(pcon_2024_merged) +
geom_sf(aes(fill = cluster), colour = "gray", size = 0.05) +
scale_fill_manual(
values = colours,
name = "Cluster of Turnout"
) +
labs(
title = "Spatial Patterns of Voter Turnout",
subtitle = "2010-2024",
caption = "Source: UK Parliament"
) +
theme_minimal() +
theme(
legend.position = "right",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
# Save it
ggsave(
filename = "cluster_map.jpeg",
plot = cluster_map,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10,
height = 12,
dpi = 300
)
table(pcon_2024_merged$cluster)
#### D: Results
colours <- c(
"High" = "#00BFFF",
"Medium - High" = "#FFD700",
"Medium - Low" = "#FF7F24",
"Low"  = "#B22222"
)
cluster_map <- ggplot(pcon_2024_merged) +
geom_sf(aes(fill = cluster), colour = "gray", size = 0.05) +
scale_fill_manual(
values = colours,
name = "Cluster of Turnout"
) +
labs(
title = "Spatial Patterns of Voter Turnout",
subtitle = "2010-2024",
caption = "Source: UK Parliament"
) +
theme_minimal() +
theme(
legend.position = "right",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
# Save it
ggsave(
filename = "cluster_map.jpeg",
plot = cluster_map,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10,
height = 12,
dpi = 300
)
Results
#### D: Results
colours <- c(
"High" = "#1A9850",
"Medium - High" = "#91CF60",
"Medium - Low" = "#FC8D59",
"Low"  = "#D73027"
)
cluster_map <- ggplot(pcon_2024_merged) +
geom_sf(aes(fill = cluster), colour = "gray", size = 0.05) +
scale_fill_manual(
values = colours,
name = "Cluster of Turnout"
) +
labs(
title = "Spatial Patterns of Voter Turnout",
subtitle = "2010-2024",
caption = "Source: UK Parliament"
) +
theme_minimal() +
theme(
legend.position = "right",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
# Save it
ggsave(
filename = "cluster_map.jpeg",
plot = cluster_map,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10,
height = 12,
dpi = 300
)
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
df_clustered <- df_clustered %>%
mutate(cluster = recode(cluster,
`1` = 4,
`2` = 1,
`3` = 3,
`4` = 2))
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
# Libraries
library(rio)
library(dplyr)
library(corrplot)
library(GGally)
library(ggplot2)
turnout <- import("/Users/alexander/Documents/MSc Data Science/erp-uom/data/ukTurnoutFULL.csv")
pcon_2024 <- st_read("/Users/alexander/Documents/MSc Data Science/erp-uom/shapefiles/2024/PCON_JULY_2024_UK_BFC.shp") # Open 2024 shp
# From long to wide format
df_wide <- turnout %>%
pivot_wider(
id_cols = c(gss_code, name),
names_from = year,
values_from = turnout_2024_constituency
) %>%
rename_with(
.cols = where(is.numeric),
.fn = ~ paste0("Y", .x)
)
### PATTERNS IN SPACE
turnout_years <- df_wide %>%
select(starts_with("Y")) %>% select(1,4,3,2,5)
plot_matrix <- ggpairs(
turnout_years,
lower = list(continuous = wrap("points", alpha = 0.3, size = 0.8)),
upper = list(continuous = wrap("cor", size = 3)),
diag = list(continuous = wrap("densityDiag", alpha = 0.5)),
title = "Turnout Scatterplot Matrix with Pearson Correlations"
)
ggsave("turnout_scatterplot_matrix.jpg",
plot = plot_matrix,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
# Cluster
set.seed(42)
wss <- function(k) {
kmeans(turnout_years, centers = k, nstart = 10)$tot.withinss
}
k_values <- 1:10
wss_values <- sapply(k_values, wss)
plot(k_values, wss_values, type = "b", pch = 19,
xlab = "Number of Clusters (k)",
ylab = "Total Within-Cluster Sum of Squares",
main = "Elbow Method for Choosing Optimal k")
k <- 4
kmeans_result <- kmeans(turnout_years, centers = k, nstart = 25)
df_clustered <- df_wide %>% # Add cluster to data
filter(complete.cases(select(., starts_with("Y")))) %>%
mutate(cluster = kmeans_result$cluster)
turnout_matrix <- df_wide %>%
select(starts_with("Y")) %>%
drop_na()
# Run PCA without scaling (since all are 0–1)
pca_result <- prcomp(turnout_matrix, center = TRUE, scale. = FALSE)
pca_df <- as.data.frame(pca_result$x[, 1:2]) %>%
mutate(cluster = factor(kmeans_result$cluster))
clust_turnout <- ggplot(pca_df, aes(x = PC1, y = PC2, colour = cluster)) +
geom_point(alpha = 0.7, size = 2) +
labs(title = "Cluster Visualisation of Turnout Patterns (PCA)",
x = "Principal Component 1", y = "Principal Component 2") +
theme_minimal() +
scale_colour_brewer(palette = "Set1")
ggsave("turnout_clusters_matrix.jpg",
plot = clust_turnout,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
df_clustered <- df_clustered %>%
mutate(cluster = recode(cluster,
`1` = 4,
`2` = 1,
`3` = 3,
`4` = 2))
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
# Libraries
library(rio)
library(dplyr)
library(corrplot)
library(GGally)
library(ggplot2)
turnout <- import("/Users/alexander/Documents/MSc Data Science/erp-uom/data/ukTurnoutFULL.csv")
pcon_2024 <- st_read("/Users/alexander/Documents/MSc Data Science/erp-uom/shapefiles/2024/PCON_JULY_2024_UK_BFC.shp") # Open 2024 shp
# From long to wide format
df_wide <- turnout %>%
pivot_wider(
id_cols = c(gss_code, name),
names_from = year,
values_from = turnout_2024_constituency
) %>%
rename_with(
.cols = where(is.numeric),
.fn = ~ paste0("Y", .x)
)
### PATTERNS IN SPACE
turnout_years <- df_wide %>%
select(starts_with("Y")) %>% select(1,4,3,2,5)
plot_matrix <- ggpairs(
turnout_years,
lower = list(continuous = wrap("points", alpha = 0.3, size = 0.8)),
upper = list(continuous = wrap("cor", size = 3)),
diag = list(continuous = wrap("densityDiag", alpha = 0.5)),
title = "Turnout Scatterplot Matrix with Pearson Correlations"
)
ggsave("turnout_scatterplot_matrix.jpg",
plot = plot_matrix,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
# Cluster
set.seed(42)
wss <- function(k) {
kmeans(turnout_years, centers = k, nstart = 10)$tot.withinss
}
k_values <- 1:10
wss_values <- sapply(k_values, wss)
plot(k_values, wss_values, type = "b", pch = 19,
xlab = "Number of Clusters (k)",
ylab = "Total Within-Cluster Sum of Squares",
main = "Elbow Method for Choosing Optimal k")
k <- 4
kmeans_result <- kmeans(turnout_years, centers = k, nstart = 25)
df_clustered <- df_wide %>% # Add cluster to data
filter(complete.cases(select(., starts_with("Y")))) %>%
mutate(cluster = kmeans_result$cluster)
turnout_matrix <- df_wide %>%
select(starts_with("Y")) %>%
drop_na()
# Run PCA without scaling (since all are 0–1)
pca_result <- prcomp(turnout_matrix, center = TRUE, scale. = FALSE)
pca_df <- as.data.frame(pca_result$x[, 1:2]) %>%
mutate(cluster = factor(kmeans_result$cluster))
clust_turnout <- ggplot(pca_df, aes(x = PC1, y = PC2, colour = cluster)) +
geom_point(alpha = 0.7, size = 2) +
labs(title = "Cluster Visualisation of Turnout Patterns (PCA)",
x = "Principal Component 1", y = "Principal Component 2") +
theme_minimal() +
scale_colour_brewer(palette = "Set1")
ggsave("turnout_clusters_matrix.jpg",
plot = clust_turnout,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
df_clustered <- df_clustered %>%
mutate(cluster = recode(cluster,
`1` = 1,
`2` = 2,
`3` = 4,
`4` = 3))
df_clustered$cluster <- ifelse(df_clustered$cluster == 1, "Low",
ifelse(df_clustered$cluster == 2, "Medium - Low",
ifelse(df_clustered$cluster == 3, "Medium - High",
ifelse(df_clustered$cluster == 4, "High",0))))
pcon_2024_merged <- pcon_2024 %>% # Merge with shapefile
left_join(df_clustered, by = c("PCON24CD" = "gss_code"))
#### D: Results
colours <- c(
"High" = "#1A9850",
"Medium - High" = "#91CF60",
"Medium - Low" = "#FC8D59",
"Low"  = "#D73027"
)
cluster_map <- ggplot(pcon_2024_merged) +
geom_sf(aes(fill = cluster), colour = "gray", size = 0.05) +
scale_fill_manual(
values = colours,
name = "Cluster of Turnout"
) +
labs(
title = "Spatial Patterns of Voter Turnout",
subtitle = "2010-2024",
caption = "Source: UK Parliament"
) +
theme_minimal() +
theme(
legend.position = "right",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
# Save it
ggsave(
filename = "cluster_map.jpeg",
plot = cluster_map,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10,
height = 12,
dpi = 300
)
# Libraries
library(rio)
library(dplyr)
library(corrplot)
library(GGally)
library(ggplot2)
turnout <- import("/Users/alexander/Documents/MSc Data Science/erp-uom/data/ukTurnoutFULL.csv")
pcon_2024 <- st_read("/Users/alexander/Documents/MSc Data Science/erp-uom/shapefiles/2024/PCON_JULY_2024_UK_BFC.shp") # Open 2024 shp
# From long to wide format
df_wide <- turnout %>%
pivot_wider(
id_cols = c(gss_code, name),
names_from = year,
values_from = turnout_2024_constituency
) %>%
rename_with(
.cols = where(is.numeric),
.fn = ~ paste0("Y", .x)
)
### PATTERNS IN SPACE
turnout_years <- df_wide %>%
select(starts_with("Y")) %>% select(1,4,3,2,5)
plot_matrix <- ggpairs(
turnout_years,
lower = list(continuous = wrap("points", alpha = 0.3, size = 0.8)),
upper = list(continuous = wrap("cor", size = 3)),
diag = list(continuous = wrap("densityDiag", alpha = 0.5)),
title = "Turnout Scatterplot Matrix with Pearson Correlations"
)
ggsave("turnout_scatterplot_matrix.jpg",
plot = plot_matrix,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
# Cluster
set.seed(42)
wss <- function(k) {
kmeans(turnout_years, centers = k, nstart = 10)$tot.withinss
}
k_values <- 1:10
wss_values <- sapply(k_values, wss)
plot(k_values, wss_values, type = "b", pch = 19,
xlab = "Number of Clusters (k)",
ylab = "Total Within-Cluster Sum of Squares",
main = "Elbow Method for Choosing Optimal k")
k <- 4
kmeans_result <- kmeans(turnout_years, centers = k, nstart = 25)
df_clustered <- df_wide %>% # Add cluster to data
filter(complete.cases(select(., starts_with("Y")))) %>%
mutate(cluster = kmeans_result$cluster)
turnout_matrix <- df_wide %>%
select(starts_with("Y")) %>%
drop_na()
# Run PCA without scaling (since all are 0–1)
pca_result <- prcomp(turnout_matrix, center = TRUE, scale. = FALSE)
pca_df <- as.data.frame(pca_result$x[, 1:2]) %>%
mutate(cluster = factor(kmeans_result$cluster))
clust_turnout <- ggplot(pca_df, aes(x = PC1, y = PC2, colour = cluster)) +
geom_point(alpha = 0.7, size = 2) +
labs(title = "Cluster Visualisation of Turnout Patterns (PCA)",
x = "Principal Component 1", y = "Principal Component 2") +
theme_minimal() +
scale_colour_brewer(palette = "Set1")
ggsave("turnout_clusters_matrix.jpg",
plot = clust_turnout,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10, height = 10, dpi = 600)
## MAP
df_clustered %>%
group_by(cluster) %>%
summarise(across(starts_with("Y"), mean, na.rm = TRUE))
df_clustered <- df_clustered %>%
mutate(cluster = recode(cluster,
`1` = 1,
`2` = 2,
`3` = 4,
`4` = 3))
df_clustered$cluster <- factor(df_clustered$cluster, levels = c(1:4),
labels = c("Low", "Medium - Low", "Medium - High", "High",
ordered = TRUE))
df_clustered$cluster <- factor(df_clustered$cluster,
levels = 1:4,
labels = c("Low", "Medium - Low", "Medium - High", "High"),
ordered = TRUE)
View(df_clustered)
str(df_clustered$cluster)
pcon_2024_merged <- pcon_2024 %>% # Merge with shapefile
left_join(df_clustered, by = c("PCON24CD" = "gss_code"))
colours <- c(
"High" = "#1A9850",
"Medium - High" = "#91CF60",
"Medium - Low" = "#FC8D59",
"Low"  = "#D73027"
)
cluster_map <- ggplot(pcon_2024_merged) +
geom_sf(aes(fill = cluster), colour = "gray", size = 0.05) +
scale_fill_manual(
values = colours,
name = "Cluster of Turnout"
) +
labs(
title = "Spatial Patterns of Voter Turnout",
subtitle = "2010-2024",
caption = "Source: UK Parliament"
) +
theme_minimal() +
theme(
legend.position = "right",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
# Save it
ggsave(
filename = "cluster_map.jpeg",
plot = cluster_map,
path = "/Users/alexander/Documents/MSc Data Science/erp-uom/figs",
width = 10,
height = 12,
dpi = 300
)
